<?php define("MODE_ECB",0);define("MODE_CBC",1);class pcrypt{var $blockmode=MODE_ECB;var $key=null;var $iv="z4c8e7gh";function pcrypt($blockmode=MODE_ECB,$cipher='BLOWFISH',$key=null){$cipher=strtolower($cipher);if(!file_exists($cipher.".php")){}include_once $cipher.".php";if(!class_exists("pcrypt_".$cipher)){$this->error("Class pcrypt_".$cipher." doesn't exists");}$class="pcrypt_".$cipher;$this->cipher=new $class($key);$this->blockmode=$blockmode;$this->key=$key;}function encrypt($plain){if(empty($plain)){$this->error("Empty Plain Text");}switch($this->blockmode){case MODE_ECB:$cipher=$this->_ecb_encrypt($plain);break;case MODE_CBC:$cipher=$this->_cbc_encrypt($plain);break;default:$this->error("Invalid mode ".$this->blockmode);}return $cipher;}function decrypt($cipher){if(empty($cipher)){$this->error("Invalid Cipher Text");}switch($this->blockmode){case MODE_ECB:$plain=$this->_ecb_decrypt($cipher);break;case MODE_CBC:$plain=$this->_cbc_decrypt($cipher);break;default:$this->error("Invalid mode ".$this->blockmode);}return $plain;}function _ecb_encrypt($plain){$blocksize=$this->cipher->blocksize;$plainsize=strlen($plain);$cipher='';for($i=0;$i<$plainsize;$i=$i+$blocksize){$block=substr($plain,$i,$blocksize);if(strlen($block)<$blocksize){$block=str_pad($block,$blocksize,"\0",STR_PAD_LEFT);}$cipher.=$this->cipher->_encrypt($block);}return $cipher;}function _ecb_decrypt($cipher){$blocksize=$this->cipher->blocksize;$ciphersize=strlen($cipher);$plain='';for($i=0;$i<$ciphersize;$i=$i+$blocksize){$block=substr($cipher,$i,$blocksize);$block=$this->cipher->_decrypt($block);while(substr($block,0,1)=="\0"){$block=substr($block,1);}$plain.=$block;}return $plain;}function _cbc_encrypt($plain){$blocksize=$this->cipher->blocksize;$plainsize=strlen($plain);$cipher='';$lcipher=$this->iv;for($i=0;$i<$plainsize;$i=$i+$blocksize){$block=substr($plain,$i,$blocksize);if(strlen($block)<$blocksize){$block=str_pad($block,$blocksize,"\0",STR_PAD_LEFT);}$lcipher=$this->cipher->_encrypt($block^$lcipher);$cipher.=$lcipher;}return $cipher;}function _cbc_decrypt($cipher){$blocksize=$this->cipher->blocksize;$ciphersize=strlen($cipher);$plain='';$lcipher=$this->iv;for($i=0;$i<$ciphersize;$i=$i+$blocksize){$block=substr($cipher,$i,$blocksize);$dblock=$lcipher^$this->cipher->_decrypt($block);$lcipher=$block;while(substr($dblock,0,1)=="\0"){$dblock=substr($dblock,1);}$plain.=$dblock;}return $plain;}function error($message){return 1;}}?>